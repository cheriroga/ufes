---
title: "Lista 1"
author: "Nathália Dantas Handam Nunes"
format: pdf
editor: source
---

### Questão 1
Implemente uma simulação de caminho aleatorio (1D) com n = 1000 passos, onde cada passo tem probabilidade 0,5 de ser +1 ou -1.

-   Simule 100 trajetórias.

-   Plote algumas trajetorias

-   Calcule a distância média do ponto de origem após $n$ passos.

```{r}
n <- 1000
m <- 100

simulate_walk <- function(n) {
  steps <- sample(c(-1, 1), size = n, replace = TRUE)
  
  walk <- cumsum(steps)
  return(walk)
}

trajectories <- replicate(m, simulate_walk(n))

set.seed(42) 
plot(trajectories[,1], type = "l", col = "blue", 
     xlab = "Passos", ylab = "Posição", 
     main = "Trajetórias de Caminho Aleatório (1D)")
for (i in 2:10) {  
  lines(trajectories[, i], col = rgb(0, 0, 1, alpha = 0.1))
}
grid()

final_positions <- trajectories[n, ] 
mean_distance <- mean(abs(final_positions))

cat("Distância média do ponto de origem após", n, 
    "passos:", mean_distance, "\n")
```

### Questão 2
Use Monte Carlo para calcular numericamente a integral de $f(x) = \text{sen}(x)$ no intervalo $[0, \pi]$.

-   Gere $n = 10.000$ valores uniformimente distribuídos em $[0,\pi].$

-   Avalie $f(x)$ para cada valor simulado e estime a integral.

-   Compare o resultado com o valor exato $\int_0^\pi{\text{sen}(x)dx} = 2.$

```{r}
n <- 10000
a <- 0
b <- pi

x_values <- runif(n, min = a, max = b)

f_values <- sin(x_values)

integral_estimate <- (b - a) * mean(f_values)

exact_value <- 2

cat("Estimativa da integral:", integral_estimate, "\n")
cat("Valor exato da integral:", exact_value, "\n")
cat("Erro absoluto:", abs(integral_estimate - exact_value), "\n")
```

### Questão 3
Use o método de Monte Carlo para estimar o valor de $\pi.$ Considere um círculo de raio 1 inscrito em um quadrado.

-   Gere $n = 100.000$ pares de coordenadas $(x,y)$ uniformemente distríbuidas em $[0,1] \times [0,1]$.

-   Calcule a fração de pontos que caem dentro do círculo.

-   Estime $\pi$ usando a relação $\pi \approx 4 \times$ fração.

```{r}
n <- 100000

x <- runif(n, min = 0, max = 1)
y <- runif(n, min = 0, max = 1)

inside_circle <- (x^2 + y^2) <= 1
fraction_inside_circle <- mean(inside_circle)

pi_estimate <- 4 * fraction_inside_circle

cat("Estimativa de pi:", pi_estimate, "\n")
cat("Valor exato de pi:", pi, "\n")
cat("Erro absoluto:", abs(pi_estimate - pi), "\n")
```

